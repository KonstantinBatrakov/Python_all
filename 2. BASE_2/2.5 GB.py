# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя нужно
# запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же
# значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

# Example 1
rate_list = [7, 5, 3, 3, 2]
frq = int(input("Сколько чисел вы хотите добавить?\n\t Введите кол-во: "))
for j in range(frq):
    add_new = int(input("Какое число вы хотите добавить?\n\t Введите число: "))
    if add_new in rate_list:
        i = rate_list.index(add_new)
        while (i + 1) <= (len(rate_list) - 1) and (rate_list[i] == rate_list[i + 1]):
            i += 1
        rate_list.insert(i, add_new)
        print(f"Обновленный список {rate_list}")
    else:
        if add_new <= rate_list[-1]:
            rate_list.append(add_new)
            print(f"Обновленный список {rate_list}")
        else:
            rate_list.insert(0, add_new)
            print(f"Обновленный список {rate_list}")

# Example 2
my_list = [7, 5, 3, 3, 2]
while True:
    n = input("Какое число вы хотите добавить? Или введите 'q' для выхода\n\t Введите число: ")
    if n != "q":
        my_list.append(int(n))
        my_list.sort(reverse=True)
        print(my_list)
    else:
        break